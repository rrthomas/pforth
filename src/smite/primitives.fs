CR .( Required primitives )

ALSO ASSEMBLER \ For INLINE


\ Stack primitives

1 0 PRIMITIVE DROP
] 1 [ BPOP
END-PRIMITIVE

1 1 PRIMITIVE PICK
BDUP
END-PRIMITIVE

\ FIXME: Implement ROLL
\ 1 1 PRIMITIVE ROLL

2 2 PRIMITIVE SWAP
] 1 [ BSWAP
END-PRIMITIVE

1 0 PRIMITIVE >R
BPUSH_FRAME_DEPTH
] -1 [
BADD
] 1 [ BSWAP
BPUSH_FRAME
END-PRIMITIVE

0 1 PRIMITIVE R>
BPOP_FRAME
END-PRIMITIVE

0 1 PRIMITIVE R@
BPUSH_F0
BLOAD_FRAME_VALUE
END-PRIMITIVE

0 1 PRIMITIVE CELL
] 4 [
END-PRIMITIVE

0 1 PRIMITIVE -CELL
] -4 [
END-PRIMITIVE

0 1 PRIMITIVE NATIVE-POINTER-CELLS
BPUSH_NATIVE_POINTER_SIZE
CELL LITERAL,
BUDIVMOD
] 1 [ BPOP
END-PRIMITIVE


\ Stack management primitives

0 1 PRIMITIVE SP@
BPUSH_FRAME_DEPTH
CELL LITERAL,
BMUL
END-PRIMITIVE

1 0 PRIMITIVE SP!
CELL LITERAL,
BUDIVMOD
] 1 [ BPOP
BSTORE_FRAME_DEPTH
END-PRIMITIVE

0 1 PRIMITIVE RP@
BPUSH_F0
CELL LITERAL,
BMUL
END-PRIMITIVE

\ FIXME: Only works when inlined!
1 0 PRIMITIVE RP!
CELL LITERAL,
BUDIVMOD
] 1 [ BPOP
BSTORE_F0
END-PRIMITIVE

\ FIXME: Make these optional in pForth (highlevel.fs does not need them)
4096 CONSTANT STACK-CELLS
4096 CONSTANT RETURN-STACK-CELLS

0 CONSTANT S0
0 CONSTANT R0

0 1 PRIMITIVE MEMORY@
BPUSH_MEMORY
END-PRIMITIVE


\ Memory primitives

1 1 PRIMITIVE @
BLOAD
END-PRIMITIVE

2 0 PRIMITIVE !
BSTORE
END-PRIMITIVE

1 1 PRIMITIVE C@
BLOADB
END-PRIMITIVE

2 0 PRIMITIVE C!
BSTOREB
END-PRIMITIVE


\ Arithmetic and logical primitives

2 1 PRIMITIVE +
BADD
END-PRIMITIVE

2 1 PRIMITIVE -
BNEGATE BADD
END-PRIMITIVE

1 1 PRIMITIVE NEGATE
BNEGATE
END-PRIMITIVE

2 1 PRIMITIVE *
BMUL
END-PRIMITIVE

2 2 PRIMITIVE U/MOD
BUDIVMOD
] 1 [ BSWAP
END-PRIMITIVE

2 2 PRIMITIVE S/REM
BDIVMOD
] 1 [ BSWAP
END-PRIMITIVE

2 1 PRIMITIVE =
BEQ
BNEGATE
END-PRIMITIVE

2 1 PRIMITIVE <
BLT
BNEGATE
END-PRIMITIVE

2 1 PRIMITIVE U<
BULT
BNEGATE
END-PRIMITIVE

2 1 PRIMITIVE AND
BAND
END-PRIMITIVE

2 1 PRIMITIVE OR
BOR
END-PRIMITIVE

2 1 PRIMITIVE XOR
BXOR
END-PRIMITIVE

1 1 PRIMITIVE INVERT
BINVERT
END-PRIMITIVE

2 1 PRIMITIVE LSHIFT
BLSHIFT
END-PRIMITIVE

2 1 PRIMITIVE RSHIFT
BRSHIFT
END-PRIMITIVE


\ Control primitives

INCLUDE" bracket-create.fs"
INCLUDE" bracket-does.fs"


\ System primitives

1 0 PRIMITIVE HALT
BHALT
END-PRIMITIVE


PREVIOUS
